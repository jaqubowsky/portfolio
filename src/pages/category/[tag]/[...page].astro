---
import { Flex, Grid, Heading, Paragraph, Section } from '@components/atoms';
import BlogCard from '@components/molecules/BlogCard.astro';
import IconAnimatedButton from '@components/molecules/IconAnimatedButton.astro';
import Pagination from '@components/molecules/Pagination.astro';
import Layout from '@layouts/Layout.astro';
import type { PaginateFunction } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

const posts = await getCollection("posts");
const getData = (post: CollectionEntry<"posts">) => {
  const data = posts.find((p) => p.slug === post.slug);

  return {
    ...data?.data,
    slug: post.slug,
  }
}

export async function getStaticPaths({paginate}: {paginate: PaginateFunction}) {
  const posts = await getCollection("posts");
  const tags = posts.flatMap((post) => post.data.tags);

  const publishedPosts = posts.filter((post) => !post.data.draft);

  return tags.flatMap((tag) => {
    const taggedPosts = publishedPosts.filter(post => post.data.tags.includes(tag));
    return paginate(taggedPosts, { pageSize: 6, params: { tag } });
  })
}

const { page } = Astro.props
const { tag } = Astro.params

---

<Layout
	title="Blog - Jakub Nalewajk"
	description="Jakub Nalewajk's blog where he shares his thoughts on software development, productivity, and more."
>

  <Section id="blog" class="gap-12">
  <Flex class="flex-wrap gap-2 flex-col items-start justify-start mt-4">
    <Heading level={2} class="text-zinc-800 flex gap-2 text-2xl font-bold">Explore blog posts about: <Paragraph class="text-primary">{tag}</Paragraph></Heading>
      <IconAnimatedButton onclick=" window.history.back()" iconName="mdi:arrow-left" size={24} class="self-center">
        <Fragment slot="content">Go Back</Fragment>
      </IconAnimatedButton>
  </Flex>
    <Grid class="grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {
        page.data.map((post) => {
          const data = getData(post);
          return <BlogCard {...data} />
        })
      }
    </Grid>
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} totalPages={page.lastPage} currPage={page.currentPage}/>
  </Section>
</Layout>
