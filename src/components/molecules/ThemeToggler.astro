---
import { cn } from "@utils/cn";
import { Icon } from "astro-icon/components";

const { class: className, ...rest } = Astro.props;
---

<button
  aria-label="toggle-theme"
  id="themeToggle"
  {...rest}
  class={cn("flex items-center justify-center", className)}
>
  <Icon
    name="mdi:white-balance-sunny"
    size={32}
    class="text-yellow-500 hover:scale-110 transition-transform transform hidden sun"
  />
  <Icon
    name="mdi:moon-and-stars"
    size={32}
    class="text-zinc-100 hover:scale-110 transition-transform transform hidden moon"
  />
</button>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    const button = document.getElementById("themeToggle");
    const sun = button.querySelector(".sun");
    const moon = button.querySelector(".moon");

    if (theme === "light") {
      document.documentElement.classList.remove("dark");

      sun.classList.remove("hidden");
      moon.classList.add("hidden");
    } else {
      document.documentElement.classList.add("dark");

      sun.classList.add("hidden");
      moon.classList.remove("hidden");
    }

    window.localStorage.setItem("theme", theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");

      if (element.classList.contains("dark")) {
        sun.classList.add("hidden");
        moon.classList.remove("hidden");
      } else {
        sun.classList.remove("hidden");
        moon.classList.add("hidden");
      }

      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    button.addEventListener("click", handleToggleClick);
  });
</script>
